import{S as ft,i as ht,s as ct,w as te,x as oe,y as ne,f as le,t as ae,z as re,C as Oe,k as i,l as d,m as f,h as n,n as ue,b as u,D as st,a as _,c as m,H as it,q as $,r as v,F as l,B as qe}from"../../../../chunks/index-6a84fe7d.js";import{C as dt}from"../../../../chunks/Checkbox-ab9905d0.js";import{E as _t}from"../../../../chunks/Example-10eade5a.js";import{T as mt}from"../../../../chunks/TreeChevron-9196c05a.js";import"../../../../chunks/TextArea.svelte_svelte_type_style_lang-ae4f99bd.js";/* empty css                                                            *//* empty css                                                                     */function $t(c){let t,a,r;return a=new mt({props:{expanded:c[1],hasChildren:c[2]}}),{c(){t=i("div"),te(a.$$.fragment),this.h()},l(o){t=d(o,"DIV",{slot:!0});var h=f(t);oe(a.$$.fragment,h),h.forEach(n),this.h()},h(){ue(t,"slot","component")},m(o,h){u(o,t,h),ne(a,t,null),r=!0},p(o,h){const b={};h&2&&(b.expanded=o[1]),h&4&&(b.hasChildren=o[2]),a.$set(b)},i(o){r||(le(a.$$.fragment,o),r=!0)},o(o){ae(a.$$.fragment,o),r=!1},d(o){o&&n(t),re(a)}}}function vt(c){let t,a;return{c(){t=i("span"),a=$("expanded"),this.h()},l(r){t=d(r,"SPAN",{slot:!0});var o=f(t);a=v(o,"expanded"),o.forEach(n),this.h()},h(){ue(t,"slot","label")},m(r,o){u(r,t,o),l(t,a)},p:qe,d(r){r&&n(t)}}}function bt(c){let t,a;return{c(){t=i("span"),a=$("hasChildren"),this.h()},l(r){t=d(r,"SPAN",{slot:!0});var o=f(t);a=v(o,"hasChildren"),o.forEach(n),this.h()},h(){ue(t,"slot","label")},m(r,o){u(r,t,o),l(t,a)},p:qe,d(r){r&&n(t)}}}function Et(c){let t,a,r,o,h,b;function T(s){c[3](s)}let y={$$slots:{label:[vt]},$$scope:{ctx:c}};c[1]!==void 0&&(y.checked=c[1]),t=new dt({props:y}),Oe.push(()=>st(t,"checked",T,c[1]));function k(s){c[4](s)}let x={$$slots:{label:[bt]},$$scope:{ctx:c}};return c[2]!==void 0&&(x.checked=c[2]),o=new dt({props:x}),Oe.push(()=>st(o,"checked",k,c[2])),{c(){te(t.$$.fragment),r=_(),te(o.$$.fragment)},l(s){oe(t.$$.fragment,s),r=m(s),oe(o.$$.fragment,s)},m(s,E){ne(t,s,E),u(s,r,E),ne(o,s,E),b=!0},p(s,E){const A={};E&64&&(A.$$scope={dirty:E,ctx:s}),!a&&E&2&&(a=!0,A.checked=s[1],it(()=>a=!1)),t.$set(A);const P={};E&64&&(P.$$scope={dirty:E,ctx:s}),!h&&E&4&&(h=!0,P.checked=s[2],it(()=>h=!1)),o.$set(P)},i(s){b||(le(t.$$.fragment,s),le(o.$$.fragment,s),b=!0)},o(s){ae(t.$$.fragment,s),ae(o.$$.fragment,s),b=!1},d(s){re(t,s),s&&n(r),re(o,s)}}}function kt(c){let t,a,r={$$slots:{options:[Et],component:[$t]},$$scope:{ctx:c}};return t=new _t({props:r}),c[5](t),{c(){te(t.$$.fragment)},l(o){oe(t.$$.fragment,o)},m(o,h){ne(t,o,h),a=!0},p(o,[h]){const b={};h&70&&(b.$$scope={dirty:h,ctx:o}),t.$set(b)},i(o){a||(le(t.$$.fragment,o),a=!0)},o(o){ae(t.$$.fragment,o),a=!1},d(o){c[5](null),re(t,o)}}}function Tt(c,t,a){let r,o=!1,h=!0;function b(k){o=k,a(1,o)}function T(k){h=k,a(2,h)}function y(k){Oe[k?"unshift":"push"](()=>{r=k,a(0,r)})}return[r,o,h,b,T,y]}class xt extends ft{constructor(t){super(),ht(this,t,Tt,kt,ct,{})}}function Ct(c){let t,a,r,o,h,b,T,y,k,x,s,E,A,P,C,q,_e,me,z,$e,ve,M,be,se,N,Ee,ie,I,pt='<code class="language-undefined">TreeChevron</code>',de,R,ke,fe,g,U,w,V,Te,xe,Y,Ce,we,j,De,He,L,D,G,ye,Pe,J,K,ge,Ae,Q,Ie,Le,H,W,Ne,Re,X,Z,Se,Be,ee,Fe,he;return x=new xt({}),{c(){t=i("h1"),a=$("TreeChevron"),r=_(),o=i("p"),h=$("A chevron indicating expanded/collapsed state for nodes in a Tree."),b=_(),T=i("h2"),y=$("Playground"),k=_(),te(x.$$.fragment),s=_(),E=i("h2"),A=$("Features"),P=_(),C=i("ul"),q=i("li"),_e=$("Displays a chevron for nodes with children and a bullet for nodes without."),me=_(),z=i("li"),$e=$("Chevron points right when node collapsed, points down when expanded."),ve=_(),M=i("li"),be=$("Chevron changes are animated as rotation. No animation when prefers-reduced motion."),se=_(),N=i("h2"),Ee=$("Anatomy"),ie=_(),I=i("pre"),de=_(),R=i("h2"),ke=$("Props"),fe=_(),g=i("table"),U=i("thead"),w=i("tr"),V=i("th"),Te=$("Name"),xe=_(),Y=i("th"),Ce=$("Type"),we=_(),j=i("th"),De=$("Description"),He=_(),L=i("tbody"),D=i("tr"),G=i("td"),ye=$("expanded"),Pe=_(),J=i("td"),K=i("code"),ge=$("boolean"),Ae=_(),Q=i("td"),Ie=$("If the associated node is expanded."),Le=_(),H=i("tr"),W=i("td"),Ne=$("hasChildren"),Re=_(),X=i("td"),Z=i("code"),Se=$("boolean"),Be=_(),ee=i("td"),Fe=$("If the associated node has children."),this.h()},l(e){t=d(e,"H1",{});var p=f(t);a=v(p,"TreeChevron"),p.forEach(n),r=m(e),o=d(e,"P",{});var ze=f(o);h=v(ze,"A chevron indicating expanded/collapsed state for nodes in a Tree."),ze.forEach(n),b=m(e),T=d(e,"H2",{});var Me=f(T);y=v(Me,"Playground"),Me.forEach(n),k=m(e),oe(x.$$.fragment,e),s=m(e),E=d(e,"H2",{});var Ue=f(E);A=v(Ue,"Features"),Ue.forEach(n),P=m(e),C=d(e,"UL",{});var S=f(C);q=d(S,"LI",{});var Ve=f(q);_e=v(Ve,"Displays a chevron for nodes with children and a bullet for nodes without."),Ve.forEach(n),me=m(S),z=d(S,"LI",{});var Ye=f(z);$e=v(Ye,"Chevron points right when node collapsed, points down when expanded."),Ye.forEach(n),ve=m(S),M=d(S,"LI",{});var je=f(M);be=v(je,"Chevron changes are animated as rotation. No animation when prefers-reduced motion."),je.forEach(n),S.forEach(n),se=m(e),N=d(e,"H2",{});var Ge=f(N);Ee=v(Ge,"Anatomy"),Ge.forEach(n),ie=m(e),I=d(e,"PRE",{class:!0});var ut=f(I);ut.forEach(n),de=m(e),R=d(e,"H2",{});var Je=f(R);ke=v(Je,"Props"),Je.forEach(n),fe=m(e),g=d(e,"TABLE",{});var ce=f(g);U=d(ce,"THEAD",{});var Ke=f(U);w=d(Ke,"TR",{});var B=f(w);V=d(B,"TH",{});var Qe=f(V);Te=v(Qe,"Name"),Qe.forEach(n),xe=m(B),Y=d(B,"TH",{});var We=f(Y);Ce=v(We,"Type"),We.forEach(n),we=m(B),j=d(B,"TH",{});var Xe=f(j);De=v(Xe,"Description"),Xe.forEach(n),B.forEach(n),Ke.forEach(n),He=m(ce),L=d(ce,"TBODY",{});var pe=f(L);D=d(pe,"TR",{});var F=f(D);G=d(F,"TD",{});var Ze=f(G);ye=v(Ze,"expanded"),Ze.forEach(n),Pe=m(F),J=d(F,"TD",{});var et=f(J);K=d(et,"CODE",{});var tt=f(K);ge=v(tt,"boolean"),tt.forEach(n),et.forEach(n),Ae=m(F),Q=d(F,"TD",{});var ot=f(Q);Ie=v(ot,"If the associated node is expanded."),ot.forEach(n),F.forEach(n),Le=m(pe),H=d(pe,"TR",{});var O=f(H);W=d(O,"TD",{});var nt=f(W);Ne=v(nt,"hasChildren"),nt.forEach(n),Re=m(O),X=d(O,"TD",{});var lt=f(X);Z=d(lt,"CODE",{});var at=f(Z);Se=v(at,"boolean"),at.forEach(n),lt.forEach(n),Be=m(O),ee=d(O,"TD",{});var rt=f(ee);Fe=v(rt,"If the associated node has children."),rt.forEach(n),O.forEach(n),pe.forEach(n),ce.forEach(n),this.h()},h(){ue(I,"class","language-undefined")},m(e,p){u(e,t,p),l(t,a),u(e,r,p),u(e,o,p),l(o,h),u(e,b,p),u(e,T,p),l(T,y),u(e,k,p),ne(x,e,p),u(e,s,p),u(e,E,p),l(E,A),u(e,P,p),u(e,C,p),l(C,q),l(q,_e),l(C,me),l(C,z),l(z,$e),l(C,ve),l(C,M),l(M,be),u(e,se,p),u(e,N,p),l(N,Ee),u(e,ie,p),u(e,I,p),I.innerHTML=pt,u(e,de,p),u(e,R,p),l(R,ke),u(e,fe,p),u(e,g,p),l(g,U),l(U,w),l(w,V),l(V,Te),l(w,xe),l(w,Y),l(Y,Ce),l(w,we),l(w,j),l(j,De),l(g,He),l(g,L),l(L,D),l(D,G),l(G,ye),l(D,Pe),l(D,J),l(J,K),l(K,ge),l(D,Ae),l(D,Q),l(Q,Ie),l(L,Le),l(L,H),l(H,W),l(W,Ne),l(H,Re),l(H,X),l(X,Z),l(Z,Se),l(H,Be),l(H,ee),l(ee,Fe),he=!0},p:qe,i(e){he||(le(x.$$.fragment,e),he=!0)},o(e){ae(x.$$.fragment,e),he=!1},d(e){e&&n(t),e&&n(r),e&&n(o),e&&n(b),e&&n(T),e&&n(k),re(x,e),e&&n(s),e&&n(E),e&&n(P),e&&n(C),e&&n(se),e&&n(N),e&&n(ie),e&&n(I),e&&n(de),e&&n(R),e&&n(fe),e&&n(g)}}}class It extends ft{constructor(t){super(),ht(this,t,null,Ct,ct,{})}}export{It as default};
