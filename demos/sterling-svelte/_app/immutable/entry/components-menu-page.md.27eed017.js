import{S as cn,i as rn,s as un,k as p,q as _,a as M,y as j,l as c,m as r,r as g,h as t,c as E,z,n as fn,b as f,H as o,A as C,g as F,d as O,B as R}from"../chunks/index.a21fe2bb.js";import{L as G}from"../chunks/Link.45b2c41a.js";function mn(k){let s;return{c(){s=_("MenuBar")},l(a){s=g(a,"MenuBar")},m(a,l){f(a,s,l)},d(a){a&&t(s)}}}function kn(k){let s;return{c(){s=_("MenuButton")},l(a){s=g(a,"MenuButton")},m(a,l){f(a,s,l)},d(a){a&&t(s)}}}function $n(k){let s;return{c(){s=_("MenuItem")},l(a){s=g(a,"MenuItem")},m(a,l){f(a,s,l)},d(a){a&&t(s)}}}function _n(k){let s;return{c(){s=_("MenuSeparator")},l(a){s=g(a,"MenuSeparator")},m(a,l){f(a,s,l)},d(a){a&&t(s)}}}function gn(k){let s,a,l,w,J,x,m,I,K,i,H,h,N,T,d,Q,B,v,V,A,b,W,P,X,Y,S,Z,D,L,ln=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token comment">// ----- Props ----- //</span>

  <span class="token comment">// HTMLDivElement props are forwarded</span>

  <span class="token keyword">let</span> <span class="token literal-property property">reference</span><span class="token operator">:</span> HTMLElement<span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token literal-property property">open</span><span class="token operator">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token comment">// ----- Events ----- //</span>

  <span class="token comment">// HTMLDivElement events are bubbled</span>

  <span class="token comment">// ----- Methods ----- //</span>

  <span class="token keyword">function</span> <span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">focus</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">options</span><span class="token operator">:</span> FocusOptions</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- Anatomy --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`,U;return h=new G({props:{href:"menubar",$$slots:{default:[mn]},$$scope:{ctx:k}}}),d=new G({props:{href:"menubutton",$$slots:{default:[kn]},$$scope:{ctx:k}}}),v=new G({props:{href:"menuitem",$$slots:{default:[$n]},$$scope:{ctx:k}}}),b=new G({props:{href:"menuseparator",$$slots:{default:[_n]},$$scope:{ctx:k}}}),{c(){s=p("h1"),a=_("Menu"),l=M(),w=p("p"),J=_("A panel that floats above other content containing a list of menu items."),x=M(),m=p("ul"),I=p("li"),K=_("Menu is a building block of menus:"),i=p("ul"),H=p("li"),j(h.$$.fragment),N=M(),T=p("li"),j(d.$$.fragment),Q=M(),B=p("li"),j(v.$$.fragment),V=M(),A=p("li"),j(b.$$.fragment),W=M(),P=p("li"),X=_("Manages position based on the reference element"),Y=M(),S=p("li"),Z=_("The menu floats above other element via portaling"),D=M(),L=p("pre"),this.h()},l(n){s=c(n,"H1",{});var e=r(s);a=g(e,"Menu"),e.forEach(t),l=E(n),w=c(n,"P",{});var q=r(w);J=g(q,"A panel that floats above other content containing a list of menu items."),q.forEach(t),x=E(n),m=c(n,"UL",{});var $=r(m);I=c($,"LI",{});var y=r(I);K=g(y,"Menu is a building block of menus:"),i=c(y,"UL",{});var u=r(i);H=c(u,"LI",{});var nn=r(H);z(h.$$.fragment,nn),nn.forEach(t),N=E(u),T=c(u,"LI",{});var sn=r(T);z(d.$$.fragment,sn),sn.forEach(t),Q=E(u),B=c(u,"LI",{});var an=r(B);z(v.$$.fragment,an),an.forEach(t),V=E(u),A=c(u,"LI",{});var tn=r(A);z(b.$$.fragment,tn),tn.forEach(t),u.forEach(t),y.forEach(t),W=E($),P=c($,"LI",{});var en=r(P);X=g(en,"Manages position based on the reference element"),en.forEach(t),Y=E($),S=c($,"LI",{});var on=r(S);Z=g(on,"The menu floats above other element via portaling"),on.forEach(t),$.forEach(t),D=E(n),L=c(n,"PRE",{class:!0});var pn=r(L);pn.forEach(t),this.h()},h(){fn(L,"class","language-svelte")},m(n,e){f(n,s,e),o(s,a),f(n,l,e),f(n,w,e),o(w,J),f(n,x,e),f(n,m,e),o(m,I),o(I,K),o(I,i),o(i,H),C(h,H,null),o(i,N),o(i,T),C(d,T,null),o(i,Q),o(i,B),C(v,B,null),o(i,V),o(i,A),C(b,A,null),o(m,W),o(m,P),o(P,X),o(m,Y),o(m,S),o(S,Z),f(n,D,e),f(n,L,e),L.innerHTML=ln,U=!0},p(n,[e]){const q={};e&1&&(q.$$scope={dirty:e,ctx:n}),h.$set(q);const $={};e&1&&($.$$scope={dirty:e,ctx:n}),d.$set($);const y={};e&1&&(y.$$scope={dirty:e,ctx:n}),v.$set(y);const u={};e&1&&(u.$$scope={dirty:e,ctx:n}),b.$set(u)},i(n){U||(F(h.$$.fragment,n),F(d.$$.fragment,n),F(v.$$.fragment,n),F(b.$$.fragment,n),U=!0)},o(n){O(h.$$.fragment,n),O(d.$$.fragment,n),O(v.$$.fragment,n),O(b.$$.fragment,n),U=!1},d(n){n&&t(s),n&&t(l),n&&t(w),n&&t(x),n&&t(m),R(h),R(d),R(v),R(b),n&&t(D),n&&t(L)}}}class vn extends cn{constructor(s){super(),rn(this,s,null,gn,un,{})}}export{vn as default};
