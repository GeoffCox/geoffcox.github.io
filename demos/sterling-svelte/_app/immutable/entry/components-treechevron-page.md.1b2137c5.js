import{S as Y,i as Z,s as ee,y as H,z as I,A,g as M,d as q,B as N,w as V,k as _,l as g,m as v,h as p,n as ne,b as m,T as Q,a as w,c as C,U as W,q as x,r as E,H as f,C as te}from"../chunks/index.27ede9e8.js";import{C as X}from"../chunks/Checkbox.3da55f49.js";import{P as oe}from"../chunks/Playground.0473572f.js";import{T as le}from"../chunks/TreeChevron.f04983ed.js";function re(r){let e,s,o;return s=new le({props:{expanded:r[1],hasChildren:r[2]}}),{c(){e=_("div"),H(s.$$.fragment),this.h()},l(n){e=g(n,"DIV",{slot:!0});var l=v(e);I(s.$$.fragment,l),l.forEach(p),this.h()},h(){ne(e,"slot","component")},m(n,l){m(n,e,l),A(s,e,null),o=!0},p(n,l){const c={};l&2&&(c.expanded=n[1]),l&4&&(c.hasChildren=n[2]),s.$set(c)},i(n){o||(M(s.$$.fragment,n),o=!0)},o(n){q(s.$$.fragment,n),o=!1},d(n){n&&p(e),N(s)}}}function pe(r){let e;return{c(){e=x("expanded")},l(s){e=E(s,"expanded")},m(s,o){m(s,e,o)},d(s){s&&p(e)}}}function ce(r){let e;return{c(){e=x("hasChildren")},l(s){e=E(s,"hasChildren")},m(s,o){m(s,e,o)},d(s){s&&p(e)}}}function ie(r){let e,s,o,n,l,c;function i(t){r[3](t)}let $={$$slots:{default:[pe]},$$scope:{ctx:r}};r[1]!==void 0&&($.checked=r[1]),e=new X({props:$}),V.push(()=>Q(e,"checked",i,r[1]));function d(t){r[4](t)}let P={$$slots:{default:[ce]},$$scope:{ctx:r}};return r[2]!==void 0&&(P.checked=r[2]),n=new X({props:P}),V.push(()=>Q(n,"checked",d,r[2])),{c(){H(e.$$.fragment),o=w(),H(n.$$.fragment)},l(t){I(e.$$.fragment,t),o=C(t),I(n.$$.fragment,t)},m(t,u){A(e,t,u),m(t,o,u),A(n,t,u),c=!0},p(t,u){const y={};u&64&&(y.$$scope={dirty:u,ctx:t}),!s&&u&2&&(s=!0,y.checked=t[1],W(()=>s=!1)),e.$set(y);const k={};u&64&&(k.$$scope={dirty:u,ctx:t}),!l&&u&4&&(l=!0,k.checked=t[2],W(()=>l=!1)),n.$set(k)},i(t){c||(M(e.$$.fragment,t),M(n.$$.fragment,t),c=!0)},o(t){q(e.$$.fragment,t),q(n.$$.fragment,t),c=!1},d(t){N(e,t),t&&p(o),N(n,t)}}}function ue(r){let e,s,o={$$slots:{props:[ie],component:[re]},$$scope:{ctx:r}};return e=new oe({props:o}),r[5](e),{c(){H(e.$$.fragment)},l(n){I(e.$$.fragment,n)},m(n,l){A(e,n,l),s=!0},p(n,[l]){const c={};l&70&&(c.$$scope={dirty:l,ctx:n}),e.$set(c)},i(n){s||(M(e.$$.fragment,n),s=!0)},o(n){q(e.$$.fragment,n),s=!1},d(n){r[5](null),N(e,n)}}}function fe(r,e,s){let o,n=!1,l=!0;function c(d){n=d,s(1,n)}function i(d){l=d,s(2,l)}function $(d){V[d?"unshift":"push"](()=>{o=d,s(0,o)})}return[o,n,l,c,i,$]}class de extends Y{constructor(e){super(),Z(this,e,fe,ue,ee,{})}}function he(r){let e,s,o,n,l,c,i,$,d,P,t,u,y,k,j,z,D,B,R,T,S,L,se=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token comment">// ----- Props ----- //</span>

  <span class="token comment">// HTMLDivElement props are forwarded</span>

  <span class="token keyword">let</span> expanded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> hasChildren <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token comment">// ----- Events ----- //</span>

  <span class="token comment">// HTMLDivElement events are bubbled</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- Anatomy --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span></code>`,U;return T=new de({}),{c(){e=_("h1"),s=x("TreeChevron"),o=w(),n=_("p"),l=x("A chevron indicating expanded/collapsed of an item in a tree hierarchy."),c=w(),i=_("ul"),$=_("li"),d=x("Displays a chevron for items with children and a bullet for items without."),P=w(),t=_("li"),u=x("Chevron points right when collapsed, points down when expanded."),y=w(),k=_("li"),j=x("Chevron changes are animated as rotation."),z=w(),D=_("li"),B=x("No animation occurs when prefers-reduced-motion set."),R=w(),H(T.$$.fragment),S=w(),L=_("pre"),this.h()},l(a){e=g(a,"H1",{});var h=v(e);s=E(h,"TreeChevron"),h.forEach(p),o=C(a),n=g(a,"P",{});var F=v(n);l=E(F,"A chevron indicating expanded/collapsed of an item in a tree hierarchy."),F.forEach(p),c=C(a),i=g(a,"UL",{});var b=v(i);$=g(b,"LI",{});var G=v($);d=E(G,"Displays a chevron for items with children and a bullet for items without."),G.forEach(p),P=C(b),t=g(b,"LI",{});var J=v(t);u=E(J,"Chevron points right when collapsed, points down when expanded."),J.forEach(p),y=C(b),k=g(b,"LI",{});var K=v(k);j=E(K,"Chevron changes are animated as rotation."),K.forEach(p),z=C(b),D=g(b,"LI",{});var O=v(D);B=E(O,"No animation occurs when prefers-reduced-motion set."),O.forEach(p),b.forEach(p),R=C(a),I(T.$$.fragment,a),S=C(a),L=g(a,"PRE",{class:!0});var ae=v(L);ae.forEach(p),this.h()},h(){ne(L,"class","language-svelte")},m(a,h){m(a,e,h),f(e,s),m(a,o,h),m(a,n,h),f(n,l),m(a,c,h),m(a,i,h),f(i,$),f($,d),f(i,P),f(i,t),f(t,u),f(i,y),f(i,k),f(k,j),f(i,z),f(i,D),f(D,B),m(a,R,h),A(T,a,h),m(a,S,h),m(a,L,h),L.innerHTML=se,U=!0},p:te,i(a){U||(M(T.$$.fragment,a),U=!0)},o(a){q(T.$$.fragment,a),U=!1},d(a){a&&p(e),a&&p(o),a&&p(n),a&&p(c),a&&p(i),a&&p(R),N(T,a),a&&p(S),a&&p(L)}}}class ge extends Y{constructor(e){super(),Z(this,e,null,he,ee,{})}}export{ge as default};
